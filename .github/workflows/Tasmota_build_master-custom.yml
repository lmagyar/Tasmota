name: Build_firmware_master-custom

on:
  workflow_dispatch:
  push:
    tags: ["v*"]

jobs:
  base-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        variant:
          - tasmota
          - tasmota--slowpwm
          - tasmota-2M
          - tasmota-4M
#          - tasmota-debug
          - tasmota-minimal
#          - tasmota-display
#          - tasmota-ir
#          - tasmota-ir--nomodulation
          - tasmota-2M-ir--nomodulation
#          - tasmota-knx
#          - tasmota-lite
          - tasmota-sensors
          - tasmota-2M-sensors
#          - tasmota-zbbridge
#          - tasmota-zigbee
          - tasmota32
          - tasmota32--slowpwm
#          - tasmota32-zbbrdgpro
          - tasmota32-webcam
#          - tasmota32-bluetooth
#          - tasmota32-nspanel
#          - tasmota32-display
#          - tasmota32-ir
#          - tasmota32-lvgl
          - tasmota32c3
#          - tasmota32c3cdc
#          - tasmota32s2
#          - tasmota32s2cdc
#          - tasmota32s3
#          - tasmota32s3cdc
#          - tasmota32c2
#          - tasmota32c6
#          - tasmota32c6cdc
#          - tasmota32solo1
#          - tasmota32-safeboot
#          - tasmota32c3-safeboot
#          - tasmota32c3cdc-safeboot
#          - tasmota32s2-safeboot
#          - tasmota32s2cdc-safeboot
#          - tasmota32s3-safeboot
#          - tasmota32s3cdc-safeboot
#          - tasmota32c2-safeboot
#          - tasmota32c6-safeboot
#          - tasmota32c6cdc-safeboot
#          - tasmota32solo1-safeboot

#          - tasmota32-odroidgo
#          - tasmota32-core2
#          - tasmota32-arduino30

    steps:
      - uses: actions/checkout@v3
        with:
          ref: master-custom
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: pip install -U platformio
      - name: Run PlatformIO
        run: platformio run -e ${{ matrix.variant }}
      - uses: actions/upload-artifact@v3
        with:
          name: firmware
          path: ./build_output
          retention-days: 1

  release:
    needs: [base-images]
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: firmware
          path: ./firmware
      - name: Zip all map files in one file -> map_all.zip
        run: 7z a -mx=9 -tzip -xr'!.*' ./firmware/map_all.zip ./firmware/map
      - name: Zip all firmware files in one file -> firmware_all.zip
        run: 7z a -mx=9 -tzip -xr'!.*' ./firmware/firmware_all.zip ./firmware/firmware
      - name: Release
        if: github.ref_type == 'tag'
        run: |
          set +x
          assets=()
          for asset in ./firmware/firmware/*; do
            assets+=("$asset")
          done
          tag_name=${{ github.ref_name }}
          set -x
          gh release create "$tag_name" -t "$tag_name" "${assets[@]}" ./firmware/firmware_all.zip ./firmware/map_all.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Release
      #   uses: jason2866/action-gh-release@v1.2
      #   if: github.ref_type == 'tag'
      #   with:
      #     tag_name: ${{ github.ref_name }}
      #     files: |
      #       ./firmware/firmware/*
      #       ./firmware/firmware_all.zip
      #       ./firmware/map_all.zip
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
